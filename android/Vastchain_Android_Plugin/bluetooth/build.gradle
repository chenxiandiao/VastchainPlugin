plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

android {
    compileSdk 30

    defaultConfig {
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
//    api project(path: ':jsbridge')
//    api project(path: ':qrscan')
    api 'ltd.vastchain.android:jsbridge:1.0.1'
    api 'ltd.vastchain.android:qrscan:1.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//    implementation 'com.github.lzyzsd:jsbridge:1.0.4'
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            maven(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'ltd.vastchain.android'
                artifactId = 'bluetooth'
                version = '1.0.7'
                artifact androidSourcesJar
            }
        }
        repositories {
//            maven {
//                //指定要上传的maven私服仓库
//                url = "file:\\D:\\maven"
//            }

//            maven {
//                name = 'maven-snapshots'
//                allowInsecureProtocol = true
//                url = 'http://124.222.248.126:8081/repository/maven-snapshots/'
//                credentials {
//                    username 'admin'
//                    password 'admin123456'
//                }
//            }

//            maven {
//                name = 'maven-snapshots'
//                allowInsecureProtocol = true
//                url = 'http://124.222.248.126:8081/repository/maven-snapshots/'
//                credentials {
//                    username 'admin'
//                    password 'admin123456'
//                }
//            }

            maven {
                allowInsecureProtocol = true
                url = "${codingArtifactsRepoUrl}"
                credentials {
                    username "${codingArtifactsGradleUsername}"
                    password "${codingArtifactsGradlePassword}"
                }
            }
        }
    }
}

task androidSourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
}